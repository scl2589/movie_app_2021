{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RA+BeA,MA3Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCoCDC,G,kNA9CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IAAI,0DANV,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAPzB,2C,kEAUVQ,KAAKN,c,+BAEG,IAAD,EACwBM,KAAKT,MAA5BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OAEE,aADA,CACA,WAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAMA,UAAU,SAAhB,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GA/BTE,IAAMC,YCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,a","file":"static/js/main.d8229f41.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Movie.css';\n\nfunction Movie({year, title, summary, poster, genres}) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title}/>\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"genres\">\n                    {genres.map((genre, index) => (\n                        <li key={index} className=\"genres__genre\">{genre}</li>\n                    ))}\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n            </div>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\"\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  }\n  // you have to wait for the function to process\n  getMovies = async() => {\n    //await = wait for axios to be finished\n    const { \n      data: { \n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\");\n    this.setState({ movies, isLoading: false }); //this.setState({ movies: movies })와 동일 \n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies }  = this.state;\n    return (\n      // javascript에서는 class대신 className이라고 한다\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          < div className=\"movies\">\n            {movies.map(movie => (\n              <Movie \n                key={movie.id}\n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image} \n                genres={movie.genres}\n              />\n            ))}\n          </div>\n          )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n\n// map의 사용법 \n// const friends = [\"dal\", \"mark\", \"lynn\", \"japan guy\"]\n// friends.map(current => {\n//   console.log(current);\n//   return 0\n// })\n// => 출력하면 dal mark lynn japan guy [0, 0, 0, 0] (array도 리턴한다.)\n\n// friends.map(function(friend){\n//   return friend + \"<3\";\n// })\n// => 출력하면 [\"dal<3\", \"mark<3\", \"lynn<3\", \"japan guy<3\"]\n\n// prop-types 설치\n// - prop-types가 할일은 내가 전달받은 props가 내가 원하는 props인지 확인해 준다.\n\n// 라이프사이클\n// - mounting\n//   - constructor: when the component mounts, show on screen, \n//   - static getDerivedStateFromProps()\n//   - render()\n//   - componentDidMount: component did mount for the first time\n// - updating\n//   - component is caused by user\n//   - static getDerivedStateFromProps()\n//   - shouldComponentUpdate() \n//   - render()\n//   - componentDidUpdate()\n// - unmounting - component is going to die (change the page or replace the component using state)\n//   - componentWillUnmount()","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// javascript와 html의 조합을 jsx이라고 한다.\nReactDOM.render(\n  <React.StrictMode>\n    {/* React는 1개의 component만 render한다. */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('potato')\n);\n"],"sourceRoot":""}